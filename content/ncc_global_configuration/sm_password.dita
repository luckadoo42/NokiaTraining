<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="id9yz-09018-cn02-tczza-sp1-d1e3132"><title>SM password management</title><conbody>
<section><title>User credential management</title>
<p>For first login, see the <i>NCC Installation and Upgrade Guide </i>for instruction about logging
                in the first time and changing passwords.</p>
<p>The SM maintains a list of users in its local database. GUI logins and API requests are authenticated with username and password against this database. Each user is assigned a role. A given role contains a set of permissions that determine what the associated user is allowed to do. The permissions are grouped and tagged by an ID called a security domain. Given that permissions are assigned to users through security domains, the SM checks each incoming API request for the user's permissions against the permissions required to perform the requested action on the requested object. The request is rejected if the user's permissions are not sufficient.</p>
<p>Permissions are static value: READ, WRITE, CREATE, DELETE.  ObjectType refers to classifications of objects that SM manages. A special out-of-the-box security domain and associated role value “system” exists, which has permission for everything in the system so that the system can be used effectively ignoring the complexities of security domains by assigning the role “system” to all users.</p>
<p>For northbound interface security, the GUI landing URL is accessible via HTTP or HTTPS. If accessed via HTTP, an immediate redirect is done to HTTPS. From then on, access is allowed only via HTTPS. The login screen makes an API call to the SM backend with login credentials, which are authenticated against the SM user DB. The API is accessible only via HTTPS.  SM expects each REST API invocation to contain an HTTP-Basic header containing username and password, which is separately authenticated.  Since HTTP-basic is inherently insecure, it needs to be transferred via HTTPS.</p>
<p>For southbound interface security, the SM accesses the managed elements via SOAP over HTTP(s).
                Two types of services exist on NCC to access:</p><ul>
<li>
<p>OSSI: A SOAP interface that supports CRUD access to most entity objects in the NCC database</p>
</li>
<li>
<p>Various other web-services that are each specific to a type of managed object, which hide the underlying data model from its API.  For example: all subscriber data model objects have this abstraction.</p>
</li>
</ul>
<p>All soap services use common security constraints, such as:</p><ul>
<li>
<p>only HTTPS is supported (no HTTP)</p>
</li>
<li>
<p>bi-directional certificate exchange; for example, the server NCC expects the client SM to also
                        send an appropriate certificate. The certificates installed by default on a
                        NCC sites support this NCC.</p>
</li>
</ul>
</section>
</conbody></concept>