<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN" "task.dtd">
		<task id="id9YZ-09018-IN00-RJZZA-Generating-TaskList"><title>Generating TaskList</title><taskbody id="d1e10120"><context><sectiondiv>
				<p><b>Overview</b></p>
				<p>This procedure provides instructions on how to generate the TaskList file. The
					task list represents the order of upgrade across all VM instances in the VNF.
					The ordering of VMs in the task list is altered depending on whether the VNF
					exists across three availability zones or one availability zone. </p>
				<note>
					<p>There is a chance that the tasklist generation will fail if the wrong files
						from the vnfgenerator output path are used. Ensure that you use the CSAR
						package "vnf_extension.json" file from the vnfgenerator output path. Do not
						use the sdc_conf.json file that does not have the word "extension" in the
						file.</p>
				</note>
			</sectiondiv>To generate the TaskList file:</context><steps>

<step><cmd>As the <codeph>root</codeph> user, enter the following to navigate to the $AUTO_HOME/tools/gentasklist directory:</cmd><info><p>
<codeph>cd $AUTO_HOME/tools/genTaskList</codeph>
</p></info></step>
<step>
				<cmd>Perform the following as necessary:</cmd>
				<substeps id="substeps_hqs_wm3_jlb">
						<substep>
							<cmd>Run the following command on the first run if you are using one
								availability zone:</cmd>
							<info>
								<cmdname>sh genTaskList.sh -m "one_zone"</cmdname>
							</info>			
							</substep>
						<substep>
							<cmd>Run the following command on subsequent runs if you do not want to
								continuously enter passwords and if you are using one availability
								zone:</cmd>
							<info>
								<p>
									<codeph>sh genTaskList.sh -m "one_zone" -p</codeph>
								</p>
							</info>
						</substep>
						<substep>
							<cmd>Run the following command on the first run if you are using the
								default three availability zones:</cmd>
							<info>
								<p>
									<codeph>sh genTaskList.sh </codeph>
								</p>
								<p>You will need to enter passwords.</p>
							</info>
						</substep>
						<substep>
							<cmd>Run the following command on subsequent runs if you do not want to
								continuously enter passwords and if you are using the default three
								availability zones:</cmd>
							<info>
								<p>
									<codeph>sh genTaskList.sh -p </codeph>
								</p>
							</info>
						</substep>
					</substeps>
	<info><p>Where:</p>
		<p>
			<b>-h</b> is the option that displays the usage and options that go with
			this command.</p>
		<p>
			<b>“-m”</b> is the option that allows you to generate the tasklist for a VNF
			with one availability zone; if -m is not used, three zones will be used.</p>
		<p>
			<b>“-p”</b> is the option that allows you to skip entering passwords. This
			option can be used if the appropriate passwords have already been provided
			on the first use. If “-p” is not present in the command, you will be
			prompted to type in passwords. The passwords are encrypted and saved by the
			ansible vault.</p>
		<p>
			<b>Expected outcome</b>
		</p>
		<p>In the <filepath>$AUTO_HOME/tools/genTaskList/</filepath> directory the
			following files are generated:</p>
		<ul id="ul_iqs_wm3_jlb">
			<li>
				<p>
					<filepath>tasklist-upgrade.txt</filepath>—for updating all VMs in
					one attempt</p>
				<ul id="ul_jqs_wm3_jlb">
					<li>
						<p>
							<i>tasklist-upgrade-before-soak.txt</i>—for updating half of
							VMs in one attempt</p>
					</li>
					<li>
						<p>
							<i>tasklist-upgrade-after-soak.txt</i>—for updating the rest
							of the VMs</p>
					</li>
				</ul>
			</li>
			<li>
				<p>For a backout, the following backout files are generated by the
					genTaskList script so that you can back out an individual group or
					all the VMs at once:</p>
				<ul id="ul_kqs_wm3_jlb">
					<li>
						<p>tasklist-backout.txt: for rolling back all VMs in one attempt
							but allowing only the upgraded VMs to be rolled back.</p>
					</li>
					<li>
						<p>tasklist-backout-group1.txt: for rolling back group1 only</p>
					</li>
					<li>
						<p>tasklist-backout-group2.txt: for rolling back group2 only</p>
					</li>
					<li>
						<p>tasklist-backout-group3.txt: for rolling back group3 only</p>
					</li>
				</ul>
			</li>
			<li>
				<p>
					<filepath>tasklist-commit.txt</filepath>—always commit all</p>
			</li>
		</ul></info>
					
				
			</step>
</steps>
</taskbody></task>
