<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id ="id9YZ-08540-UG05-PCZZA-d1e188102"><title>Tracing usage examples</title><conbody>
<section>

<p>The following are tracing examples for the Log-Request command:</p>
<sectiondiv>
<p><b>Example 1:</b></p>
<p>Log-Request(Brief, All)</p>
<p>Traces and logs the following:</p>
<p>
<systemoutput>DiameterRequest [</systemoutput>
</p>
<p>
<systemoutput>&#160; Application-Id: Gx</systemoutput>
</p>
<p>
<systemoutput>&#160; Command: CCR</systemoutput>
</p>
<p>
<systemoutput>&#160; Flags: REQ PXY</systemoutput>
</p>
<p>
<systemoutput>&#160; Hop-by-Hop (client): 11534339</systemoutput>
</p>
<p>
<systemoutput>&#160; Hop-by-Hop (server): 11534339</systemoutput>
</p>
<p>
<systemoutput>&#160; End-to-End: -1733296124</systemoutput>
</p>
<p>
<systemoutput>&#160; Reception Address: null</systemoutput>
</p>
<p>
<systemoutput>&#160; Diameter AVPs:</systemoutput>
</p>
<p>
<systemoutput>&#160;&#160;&#160;Session-Id: UTF8String="Diameter Logging Context Test Session ID"</systemoutput>
</p>
<p>
<systemoutput>&#160;&#160;&#160;Auth-Application-Id: Unsigned32=16777238</systemoutput>
</p>
<p>
<systemoutput>&#160;&#160;&#160;Origin-Host: Identity=diameter.default.origin.value</systemoutput>
</p>
<p>
<systemoutput>&#160;&#160;&#160;Origin-Realm: Identity=diameter.default.origin.value</systemoutput>
</p>
<p>
<systemoutput>&#160;&#160;&#160;Destination-Host: Identity=tpapps.realm</systemoutput>
</p>
<p>
<systemoutput>&#160;&#160;&#160;Destination-Realm: Identity=realm</systemoutput>
</p>
<p>
<systemoutput>&#160;&#160;&#160;Vendor-Specific-Application-Id:&#160;[Grouped]</systemoutput>
</p>
<p>
<systemoutput>&#160;&#160;&#160;&#160;&#160;Auth-Application-Id: Unsigned32=1</systemoutput>
</p>
<p>
<systemoutput>&#160;&#160;&#160;&#160;&#160;Acct-Application-Id: Unsigned32=2</systemoutput>
</p>
<p>
<systemoutput>&#160;&#160;&#160;&#160;&#160;Vendor-Id: Unsigned32=0</systemoutput>
</p>
<p>
<systemoutput>&#160;&#160;&#160;Proxy-Info:&#160;[Grouped]</systemoutput>
</p>
<p>
<systemoutput>&#160;&#160;&#160;[Value 0]</systemoutput>
</p>
<p>
<systemoutput>&#160;&#160;&#160;&#160;&#160;Proxy-Host: Identity=test-proxy-host1</systemoutput>
</p>
<p>
<systemoutput>&#160;&#160;&#160;&#160;&#160;Proxy-State: OctetString(Binary)=[0x74('t'), 0x65('e'), 0x73('s'), 0x74('t'), 0x2d('-'), 0x70('p'), 0x72('r'), 0x6f('o'), 0x78('x'), 0x79('y'), 0x2d('-'), 0x73('s'), 0x74('t'), 0x61('a'), 0x74('t'), 0x65('e')]</systemoutput>
</p>
<p>
<systemoutput>&#160;&#160;&#160;[Value 1]</systemoutput>
</p>
<p>
<systemoutput>&#160;&#160;&#160;&#160;&#160;Proxy-Host: Identity=test-proxy-host2</systemoutput>
</p>
<p>
<systemoutput>&#160;&#160;&#160;&#160;&#160;Proxy-State: OctetString(Binary)=[0x74('t'), 0x65('e'), 0x73('s'), 0x74('t'), 0x2d('-'), 0x70('p'), 0x72('r'), 0x6f('o'), 0x78('x'), 0x79('y'), 0x2d('-'), 0x73('s'), 0x74('t'), 0x61('a'), 0x74('t'), 0x65('e')]</systemoutput>
</p>
<p>
<systemoutput>&#160;&#160;&#160;Route-Record: Identity=test-route-record-1, Identity=test-route-record-2]</systemoutput>
</p>
</sectiondiv>
<sectiondiv>
<p><b>Example 2</b></p>
<p>Log-Request(Detailed, All)</p>
<p>Traces and logs the following:</p>
<p>
<systemoutput>DiameterRequest [</systemoutput>
</p>
<p>
<systemoutput>&#160; Application-Id: Gx</systemoutput>
</p>
<p>
<systemoutput>&#160; Command: CCR</systemoutput>
</p>
<p>
<systemoutput>&#160; Flags: REQ PXY</systemoutput>
</p>
<p>
<systemoutput>&#160; Hop-by-Hop (client): 11534339</systemoutput>
</p>
<p>
<systemoutput>&#160; Hop-by-Hop (server): 11534339</systemoutput>
</p>
<p>
<systemoutput>&#160; End-to-End: -1733296124</systemoutput>
</p>
<p>
<systemoutput>&#160; Reception Address: null</systemoutput>
</p>
<p>
<systemoutput>&#160; Diameter AVP[code=263, name=Session-Id, vendorId=0, flags#0=-M-, value#0:UTF8String="Diameter Logging Context Test Session ID"]</systemoutput>
</p>
<p>
<systemoutput>&#160; DiameterAVP [code=258, name=Auth-Application-Id, vendorId=0, flags#0=-M-, value#0:Unsigned32=16777238]</systemoutput>
</p>
<p>
<systemoutput>&#160; DiameterAVP [code=264, name=Origin-Host, vendorId=0, flags#0=-M-, value#0:Identity=diameter.default.origin.value]</systemoutput>
</p>
<p>
<systemoutput>&#160; DiameterAVP [code=296, name=Origin-Realm, vendorId=0, flags#0=-M-, value#0:Identity=diameter.default.origin.value]</systemoutput>
</p>
<p>
<systemoutput>&#160; DiameterAVP [code=293, name=Destination-Host, vendorId=0, flags#0=-M-, value#0:Identity=tpapps.realm]</systemoutput>
</p>
<p>
<systemoutput>&#160; DiameterAVP [code=283, name=Destination-Realm, vendorId=0, flags#0=-M-, value#0:Identity=realm]</systemoutput>
</p>
<p>
<systemoutput>&#160; DiameterAVP [code=260, name=Vendor-Specific-Application-Id, vendorId=0, flags#0=-M-, value#0:GroupedAVP={&#160;&#160;&#160;</systemoutput>
</p>
<p>
<systemoutput>&#160;&#160;&#160;AVP#0=DiameterAVP [code=258, name=Auth-Application-Id, vendorId=0, flags#0=-M-, value#0:Unsigned32=1],&#160;&#160;&#160; </systemoutput>
</p>
<p>
<systemoutput>&#160;&#160;&#160;AVP#1=DiameterAVP [code=259, name=Acct-Application-Id, vendorId=0, flags#0=-M-, value#0:Unsigned32=2],</systemoutput>
</p>
<p>
<systemoutput>&#160;&#160;&#160;AVP#2=DiameterAVP [code=266, name=Vendor-Id, vendorId=0, flags#0=-M-, value#0:Unsigned32=0]}]</systemoutput>
</p>
<p>
<systemoutput>&#160; DiameterAVP [code=284, name=Proxy-Info, vendorId=0&#160;&#160;&#160;flags#0=-M-, value#0:GroupedAVP={</systemoutput>
</p>
<p>
<systemoutput>&#160;&#160;&#160;&#160;&#160;AVP#0=DiameterAVP [code=280, name=Proxy-Host, vendorId=0, flags#0=-M-, value#0:Identity=test-proxy-host1],</systemoutput>
</p>
<p>
<systemoutput>&#160;&#160;&#160;&#160;&#160;AVP#1=DiameterAVP [code=33, name=Proxy-State, vendorId=0, flags#0=-M-, value#0:OctetString(Binary)=[0x74('t'), 0x65('e'), 0x73('s'), 0x74('t'), 0x2d('-'), 0x70('p'), 0x72('r'), 0x6f('o'), 0x78('x'), 0x79('y'), 0x2d('-'), 0x73('s'), 0x74('t'), 0x61('a'), 0x74('t'), 0x65('e')]]},&#160;&#160;&#160;flags#1=-M-, value#1:GroupedAVP={</systemoutput>
</p>
<p>
<systemoutput>&#160;&#160;&#160;&#160;&#160;AVP#0=DiameterAVP [code=280, name=Proxy-Host, vendorId=0, flags#0=-M-, value#0:Identity=test-proxy-host2],</systemoutput>
</p>
<p>
<systemoutput>&#160;&#160;&#160;&#160;&#160; AVP#1=DiameterAVP [code=33, name=Proxy-State, vendorId=0, flags#0=-M-, value#0:OctetString(Binary)=[0x74('t'), 0x65('e'), 0x73('s'), 0x74('t'), 0x2d('-'), 0x70('p'), 0x72('r'), 0x6f('o'), 0x78('x'), 0x79('y'), 0x2d('-'), 0x73('s'), 0x74('t'), 0x61('a'), 0x74('t'), 0x65('e')]]}]</systemoutput>
</p>
<p>
<systemoutput>DiameterAVP [code=282, name=Route-Record, vendorId=0</systemoutput>
</p>
<p>
<systemoutput>&#160;&#160;&#160;flags#0=-M-, value#0:Identity=test-route-record-1,</systemoutput>
</p>
<p>
<systemoutput>&#160;&#160;&#160;flags#1=-M-, value#1:Identity=test-route-record-2]]</systemoutput>
</p>
</sectiondiv>
<sectiondiv>
<p><b>Example 3</b></p>
<p>Log-Request(Brief, "Proxy-Info.Proxy-Host, Vendor-Specific-Application-Id.Vendor-Id")</p>
<p>Traces and logs the following:</p>
<p>
<systemoutput>DiameterRequest [</systemoutput>
</p>
<p>
<systemoutput>&#160; Diameter AVPs:</systemoutput>
</p>
<p>
<systemoutput>&#160;&#160;&#160; Vendor-Specific-Application-Id:&#160;[Grouped]</systemoutput>
</p>
<p>
<systemoutput>&#160;&#160;&#160;&#160;&#160; Vendor-Id: Unsigned32=0</systemoutput>
</p>
<p>
<systemoutput>&#160;&#160;&#160;Proxy-Info:&#160;[Grouped]</systemoutput>
</p>
<p>
<systemoutput>&#160;&#160;&#160;[Value 0]</systemoutput>
</p>
<p>
<systemoutput>&#160;&#160;&#160;Proxy-Host: Identity=test-proxy-host1</systemoutput>
</p>
<p>
<systemoutput>&#160;&#160;&#160;[Value 1]</systemoutput>
</p>
<p>
<systemoutput>&#160;&#160;&#160;&#160;&#160;Proxy-Host: Identity=test-proxy-host2]</systemoutput>
</p>
</sectiondiv>
<sectiondiv>
<p><b>Example 4</b></p>
<p>Log-Request(Detailed, "Proxy-Info.Proxy-Host, Vendor-Specific-Application-Id.Vendor-Id")</p>
<p>Traces and logs the following:</p>
<p>
<systemoutput>DiameterRequest [</systemoutput>
</p>
<p>
<systemoutput>&#160; Diameter AVPs [code=260, name=Vendor-Specific-Application-Id, vendorId=0, flags#0=-M-, value#0:GroupedAVP={</systemoutput>
</p>
<p>
<systemoutput>&#160;&#160;&#160;AVP#2=DiameterAVP [code=266, name=Vendor-Id, vendorId=0, flags#0=-M-, value#0:Unsigned32=0]}]</systemoutput>
</p>
<p>
<systemoutput>&#160; DiameterAVP [code=284, name=Proxy-Info, vendorId=0</systemoutput>
</p>
<p>
<systemoutput>flags#0=-M-, value#0:GroupedAVP={&#160;&#160;&#160;</systemoutput>
</p>
<p>
<systemoutput>&#160;&#160;&#160;&#160;&#160;AVP#0=DiameterAVP [code=280, name=Proxy-Host, vendorId=0, flags#0=-M-, value#0:Identity=test-proxy-host1]},</systemoutput>
</p>
<p>
<systemoutput>&#160;&#160;&#160;flags#1=-M-, value#1:GroupedAVP={</systemoutput>
</p>
<p>
<systemoutput>&#160;&#160;&#160;&#160;&#160;AVP#0=DiameterAVP [code=280, name=Proxy-Host, vendorId=0, flags#0=-M-, value#0:Identity=test-proxy-host2]}]]</systemoutput>
</p>
</sectiondiv>
<sectiondiv>
<p><b>Example 5</b></p>
<p>Log-Request(Basic, All)</p>
<p>Traces and logs the following:</p>
<p>
<systemoutput>Gx Credit-Control-Request from host 'diameter.default.origin.value' to 'tpapps.realm' with session-id 'Diameter Logging Context Test Session ID'</systemoutput>
</p>
</sectiondiv>
</section>
</conbody></concept>