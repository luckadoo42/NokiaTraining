<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
		<concept id="id9YZ-09018-UG00-PCZZA-d1e13182"><title>User entity</title><conbody>

<section><title>User</title>

<p>A user is a person, who can own devices (but not a requirement), manage one or more accounts, and manage one or more groups. To manage an account or group, the user must be given administrative privileges. The user has data associated to it that identifies who they are and their personal preferences by name, phone number, email address, and in some cases custom data. This data is separated from the device data and account data. This entity can also represent a business or company.</p>
<p>Notifications for the subscribers and the behaviors of notification servers for that subscriber require that an email address and physical address are provided with configurable parameters that allow the subscriber to receive notifications as either Email or SMS.</p>
<p>The user entity represents a person that is identified by one of the following identifier types:</p><ul>

<li>
<p>Name</p>
</li>
<li>
<p>a UUID in the case of an IoT appliance like a water meter where uniqueness is not a factor</p>
</li>
<li>
<p>an MSISDN</p>
</li>
<li>
<p>an Email address</p>
</li>
<li>
<p>a Facebook ID</p>
</li>
<li>
<p>a list of IMEIs in the case; where for example, a single SIM may be used in more than one device or where a number of different SIMs may be used in one device at different times</p>
</li>
</ul>
<p>A user is synonymous with a subscriber and can be an account owner, a group owner, a member of a group, or a device owner. Users or Subscribers and subscriber data are provisioned, accessed, and stored in either the SPS database or an external SPR (a repository external to the SPS deployment, which may be one of a standards based or non-standards based SPR or UDR).</p>
<p>Whether the database or external SPR is used, the application can interface with and fetch all of the subscriber data (including custom data attributes) needed to process and execute policy, charging, and customer experience information as provisioned through the relevant interfaces.</p>
<p>Each subscriber can have a set of custom data defined that is unique.</p>
<p>The Provisioning module will also append the pre-filled values along with the changed values while sending the Update request to the SPS.</p>
</section>
</conbody></concept>