<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="overview_of_sps_containers">
    <title>Containers</title>
    <conbody>
        <p>The containers used in SPS consist of two groups: SPS application containers (baseline
            and additional) and CSF Telemetry Blueprint (BTEL) containers. SPS application
            containers are responsible for SPS functionality. SPS application containers also
            include Data Refinary (DR) containers, which are used for CDRs. BTEL containers are
            related to fault and performance monitoring as well as logging.</p>
        <p>The following table describes SPS baseline containers.</p>
        <table frame="all" rowsep="1" colsep="1" id="table_g34_jkv_klb">
            <title>SPS baseline containers</title>
            <tgroup cols="3">
                <colspec colname="c1" colnum="1" colwidth="1.41*"/>
                <colspec colname="c2" colnum="2" colwidth="3.08*"/>
                <colspec colname="newCol3" colnum="3" colwidth="1*"/>
                <thead>
                    <row>
                        <entry>Container</entry>
                        <entry>Description</entry>
                        <entry>Scalability</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry><b>iohd</b></entry>
                        <entry>Handles the ingress / egress traffic for 4G Diameter messages. Load
                            balances the ingress traffic to the Charging application, wrapping the
                            Diameter message in an HTTP Post.</entry>
                        <entry/>
                    </row>
                    <row>
                        <entry><b>charging</b></entry>
                        <entry>Provides the business logic for charging and also includes logic for
                            policy. The following are the key features:<ul id="ul_qzn_svl_llb">
                                <li>
                                    <p>Performs online rating and charging for data session.</p>
                                </li>
                                <li>
                                    <p>Provides session and balance management for Diameter calls
                                        triggered on the Gy interface.</p>
                                </li>
                                <li>
                                    <p>Performs rating and charging for data and SMS services on all
                                        devices and customer types.</p>
                                </li>
                                <li>
                                    <p>Invokes Nokia ART rules to determine the charging rates for
                                        the different services, such as easy customization of rating
                                        and charging and additional flexibility.</p>
                                </li>
                                <li>
                                    <p>Enables operators to offer their customers innovative,
                                        flexible, and context-specific real-time charging models to
                                        provide easy and immediate payment options for expanding the
                                        existing revenue streams tailored to individual market
                                        segments.</p>
                                </li>
                            </ul></entry>
                        <entry>N-scalable according to load</entry>
                    </row>
                    <row>
                        <entry><b>servicemanager</b></entry>
                        <entry>
                            <p>The following are the key features:</p>
                            <ul id="ul_uwx_swl_llb">
                                <li>
                                    <p>Common point of presence for provisioning of SPS network
                                        systems.</p>
                                </li>
                                <li>
                                    <p>Provides GUI to service providers Operation, Administration,
                                        and Maintenance (OAM) network as well as REST and SOAP APIs
                                        to external provisioning.</p>
                                </li>
                                <li>
                                    <p>Maintains master copy locally and distributes to all SPS the
                                        application configuration related data.</p>
                                </li>
                                <li>
                                    <p>Distributes to a selected SPS system subscriber related data
                                        and maintains the SPS system location active/primary and
                                        backup of those data.</p>
                                </li>
                                <li>
                                    <p>Acts as an API request gateway for SOAP and REST API requests
                                        sent by external clients by identifying the right SPS system
                                        and proxying the request to them.</p>
                                </li>
                            </ul>
                        </entry>
                        <entry>N-scalable according to load</entry>
                    </row>
                    <row>
                        <entry><b>provisioning</b></entry>
                        <entry>Subscriber-related services (largely, not entirely). Includes ME
                            Provisioning that receives updates from the SM and provisions them into
                            the ME database. Also includes the subscriber Life Cycle Manager
                            function that is triggered by TEM events and handles events for things
                            such as end-of-billing-cycle handling, etc..</entry>
                        <entry>N-scalable according to load</entry>
                    </row>
                    <row>
                        <entry><b>notification</b></entry>
                        <entry>Represents the Notification Server (NS) engine, which  provides a
                            rules-based notification service for sending various notifications to
                            end subscribers or to other machine systems, over many varied delivery
                            channels such as SMS, email, app channel, SOAP, etc. Also supports
                            ingress TCP port for SurePay to send notifications into NS, which might
                            result in outgoing notifications from SPS NS on various delivery
                            channels.  Notif is used only for sending outgoing notifications.<p>The
                                following are the key features:</p><ul id="ul_mk2_gwl_llb">
                                <li>
                                    <p>Sends smart notifications to end users based on predefined
                                        notification templates selected after ART rule
                                        evaluation.</p>
                                </li>
                                <li>
                                    <p>Receives triggers from SPS applications (Charging and Policy)
                                        and other applications (for example, SurePay, external PCRF)
                                        for sending notifications. The Notification Service
                                        application sends out notifications after evaluating whether
                                        and when a notification should be sent.</p>
                                </li>
                                <li>
                                    <p>Supports multiple channels like email, SMS, SOAP, REST, and
                                        TCP/IP for sending the notifications.</p>
                                </li>
                                <li>
                                    <p>Consults several IT systems before sending a notification and
                                        informs an IT system after sending it, for logging
                                        purposes.</p>
                                </li>
                            </ul></entry>
                        <entry>N-scalable according to load</entry>
                    </row>
                    <row>
                        <entry><b>aerospike</b></entry>
                        <entry>The NoSQL database server (Aerospike) containers, used by the SPS
                            charging as well as various SPS functions.</entry>
                        <entry>N-scalable according to load</entry>
                    </row>
                    <row>
                        <entry><b>cdr</b></entry>
                        <entry>Core functionality leveraging Data Refinery (DR) microservices, to
                            enhance the flexibility and features of SPS CDR handling. Consumes CDRs
                            received on Kafka queue (from applications), manages and mediates them,
                            and makes available to a variety of consumers. Several pod types.<p>DR
                                runs on both CHF Router and CHF nodes, for providing both Assume
                                Positive feature functionality as well as CDR management.</p><ul
                                id="ul_ljw_ym1_llb">
                                <li>
                                    <p><b>DR CNF infrastructure</b></p>
                                </li>
                                <li>
                                    <p><b>DR CDR Streams</b></p>
                                </li>
                                <li><b>DR Assume Positive Streams</b></li>
                                <li><b>Redis DB</b>: Used for storing DR data for CDRs, assume
                                    positive</li>
                            </ul></entry>
                        <entry>N-scalable according to load</entry>
                    </row>
                    <row>
                        <entry><b>centralmanagement</b></entry>
                        <entry>
                            <p>Central Services &amp; Management. Includes Lock and Transaction
                                Manager (LTM) and Timed Events Manager (TEM) functionality. </p>
                            <ul id="ul_zyp_jk1_llb">
                                <li>
                                    <p>LTM is used by Apps to obtain a lock when accessing database
                                        records for provisioning or call processing, based on the
                                        device ID or the group ID, etc, to provide transactional
                                        behavior on top of Aerospike. Its data is in-memory only.
                                    </p>
                                </li>
                                <li>
                                    <p>Apps add entries to TEM to get called back for future events,
                                        such as lifecycle events (e.g. start of a new billing
                                        cycle). These timed events are stored in the DB for
                                        persistence.</p>
                                </li>
                                <li>May also include CNF-level monitoring logic and network
                                    heartbeat.</li>
                            </ul>
                            <p>In a future release, this will be broken down into separate LTM and
                                TEM containers. At that time, LTM will be made horizontally
                                scalable, to address real-time limitations from a single instance,
                                as well as to increase fault tolerance.</p>
                        </entry>
                        <entry/>
                    </row>
                    <row>
                        <entry><b>kafka</b></entry>
                        <entry>Distributed streaming platform used by SPS for a variety or purposes,
                            including pub/sub to events such as data changes, or work distribution
                            queues for timed events, audits, and sending CDRs from the apps to the
                            CDR consumer pods.</entry>
                        <entry>N-scalable according to load</entry>
                    </row>
                    <row>
                        <entry><b>etcd</b></entry>
                        <entry>Used for service discovery &amp; configuration</entry>
                        <entry>Fixed number</entry>
                    </row>
                    <row>
                        <entry><b>zookeeper</b></entry>
                        <entry>Centralized service for maintaining configuration information,
                            naming, providing distributed synchronization, and providing group
                            services. Used by Kafka.</entry>
                        <entry>Fixed number</entry>
                    </row>
                    <row>
                        <entry><b><b>keycloak</b></b></entry>
                        <entry>Provides user authentication / SSO capabilities for the SM App and
                            for Data Refinery components. It stores its information in Maria DB.
                            KeyCloak will run on the pair of SMs, but in local-only mode in this
                            initial release (will not be GR). The pair of KeyCloaks will be used by
                            both SM for its authentication, as well as by the Data Refinery (which
                            is running on the MEs).</entry>
                        <entry>N-scalable according to load</entry>
                    </row>
                    <row>
                        <entry><b>mariadb</b></entry>
                        <entry>There will be two instances of Maria DB relational database in the
                            SPS CNF solution. One instance will run on the SM nodes, deployed as
                            part of KeyCloak. (KeyCloak requires Maria DB and it is deployed as part
                            of CKEY Helm.) A separate instance is provided in all SPS CNF instances
                            as part of the BTEL Helm deployment (if the optional BTEL solution is
                            deployed in a given operator's environment). BTEL stores alarms in Maria
                            DB.</entry>
                        <entry>Fixed number</entry>
                    </row>
                </tbody>
            </tgroup>
        </table>
        <p>The following table describes BTEL containers.</p>
        <table frame="all" rowsep="1" colsep="1" id="table_wd2_dv1_llb">
            <title>BTEL containers</title>
            <tgroup cols="3">
                <colspec colname="c1" colnum="1" colwidth="1.45*"/>
                <colspec colname="c2" colnum="2" colwidth="3.2*"/>
                <colspec colname="newCol3" colnum="3" colwidth="1*"/>
                <thead>
                    <row>
                        <entry>Component</entry>
                        <entry>Container description</entry>
                        <entry>Scalability</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry><b>BTEL operator</b></entry>
                        <entry>Includes this container:<ul id="ul_js1_gv1_llb">
                                <li>btel-oper</li>
                            </ul></entry>
                        <entry/>
                    </row>
                    <row>
                        <entry><b>Maria DB</b></entry>
                        <entry>
                            <p>Includes this container, used to store alarms (see alarm manager
                                above):</p>
                            <ul id="ul_wnr_hv1_llb">
                                <li>
                                    <p>cmdb-mariadb</p>
                                </li>
                            </ul>
                        </entry>
                        <entry/>
                    </row>
                    <row>
                        <entry><b>Message broker / queing</b></entry>
                        <entry>
                            <p>Includes this container</p>
                            <ul id="ul_pzq_3v1_llb">
                                <li>
                                    <p>crmq</p>
                                </li>
                            </ul>
                        </entry>
                        <entry/>
                    </row>
                    <row>
                        <entry><b>Prometheus</b></entry>
                        <entry>
                            <p>Includes these containers for managing metrics and associated
                                alerts:</p>
                            <ul id="ul_xk4_jv1_llb">
                                <li>
                                    <p>cpro-alertmanager</p>
                                </li>
                                <li>
                                    <p>cpro-gen3gppxml</p>
                                </li>
                                <li>
                                    <p>cpro-kube-state-metrics</p>
                                </li>
                                <li>
                                    <p>cpro-push-gateway</p>
                                </li>
                                <li>
                                    <p>cpro-restserver</p>
                                </li>
                                <li>
                                    <p>cpro-server</p>
                                </li>
                                <li>
                                    <p>grafana</p>
                                </li>
                            </ul>
                        </entry>
                        <entry/>
                    </row>
                    <row>
                        <entry><b>Notifications</b></entry>
                        <entry>
                            <p> Includes this container to manage notifications related to
                                alarms/metrics alerts</p>
                            <ul id="ul_crb_lv1_llb">
                                <li>
                                    <p>cnot</p>
                                </li>
                            </ul>
                        </entry>
                        <entry/>
                    </row>
                    <row>
                        <entry><b>Ingress controller</b></entry>
                        <entry>
                            <ul id="ul_lgz_mv1_llb">
                                <li>
                                    <p>citm-ingress-controller</p>
                                </li>
                                <li>
                                    <p>citm-default-404</p>
                                </li>
                            </ul>
                        </entry>
                        <entry/>
                    </row>
                    <row>
                        <entry><b>Alarm manager</b></entry>
                        <entry>
                            <p>Includes these containers to manage alarms:</p>
                            <ul id="ul_l42_pv1_llb">
                                <li>
                                    <p>calm</p>
                                </li>
                                <li>
                                    <p>calm-config</p>
                                </li>
                            </ul>
                        </entry>
                        <entry/>
                    </row>
                    <row>
                        <entry><b>EFK stack</b></entry>
                        <entry> Includes these containers to manage the searching and viewing of
                                logs:<ul id="ul_cf4_qv1_llb">
                                <li>belk-curator</li>
                                <li>belk-elasticsearch-client</li>
                                <li>belk-elasticsearch-data</li>
                                <li>belk-elasticsearch-master</li>
                                <li>belk-kibana</li>
                            </ul></entry>
                        <entry/>
                    </row>
                    <row>
                        <entry><b>cproc-node-exporter</b></entry>
                        <entry>There is one instance on each worker node, associated with the
                            exporting of Prometheus data.</entry>
                        <entry/>
                    </row>
                    <row>
                        <entry><b>belk-fluentd-daemonset</b></entry>
                        <entry>There is one instance on each worker node for our fluentd management
                            and routing of stdout info. </entry>
                        <entry/>
                    </row>
                </tbody>
            </tgroup>
        </table>
        <section id="section_ivq_cdb_llb">
            <title>Integration of additional or external microservices into SPS CNF</title>
            <p>Data Refinary (DR) is an external microservice integrated into SPS CNF. Similarly,
                based on the same generic principles, other microserveces might be integrated into
                SPS CNF.</p>
        </section>
    </conbody>
</concept>
