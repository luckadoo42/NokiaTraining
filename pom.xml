<?xml version="1.0" encoding="utf-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<artifactId>nctm</artifactId>

	<version>20-SNAPSHOT</version>

	<name>Nokia Co-op training material</name>
	<url>http://pubs.motive.com/wiki/</url>
	<description>Nokia Co-op training material</description>
	<parent>
		<groupId>motive.docmodules</groupId>
		<artifactId>base-pom</artifactId>
		<version>1.8-93</version>
	</parent>
	
	<properties>
		<!-- added for the PDF generation of API docs -->
		<maven.build.timestamp.format>yyyy-MM-dd HH:MM</maven.build.timestamp.format>
		
		<!-- for all the dependencies below, use a 2.1.0-nn or later version now that it's on Jenkins -->
		<!-- check http://pubs.motive.com/wiki/ReleaseVersions for latest releses -->

		<doctools.version>2.1.16-207</doctools.version> <!-- doctools must be 2.1.1-31 or later to get updates for jira feedback-->
		<commoncontent.version>2.1.9-155</commoncontent.version>
		<libdoctools.version>2.1.1-20</libdoctools.version>
		
	</properties>

	<!-- ************************************** -->
	<!-- Nothing to see below here, move along. -->
	<!-- ************************************** -->
	<packaging>pom</packaging>
	<groupId>motive.docmodules</groupId>
	<modelVersion>4.0.0</modelVersion>
	<dependencies>
		
		<dependency>
			<groupId>motive.docmodules</groupId>
			<artifactId>doctools</artifactId>
			<type>zip</type>
			<scope>provided</scope>
			<version>${doctools.version}</version>
		</dependency>
		<dependency>
			<groupId>motive.docmodules</groupId>
			<artifactId>glossary</artifactId>
			<classifier>resources</classifier>
			<type>zip</type>
			<scope>provided</scope>
			<version>${commoncontent.version}</version>
		</dependency>
		<dependency>
			<groupId>motive.docmodules</groupId>
			<artifactId>libdoctools</artifactId>
			<scope>provided</scope>
			<type>zip</type>
			<version>${libdoctools.version}</version>
		</dependency>
		<dependency>
			<groupId>xerces</groupId>
			<artifactId>xercesImpl</artifactId>
			<version>2.9.1</version>
			<scope>provided</scope>
		</dependency>
	</dependencies>
	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>2.2</version>
					<dependencies>
						<dependency>
							<groupId>org.apache.maven</groupId>
							<artifactId>maven-archiver</artifactId>
							<version>2.4</version>
						</dependency>
					</dependencies>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-antrun-plugin</artifactId>
					<version>1.5</version>
					<dependencies>
						<dependency>
							<groupId>saxon</groupId>
							<artifactId>saxon</artifactId>
							<version>6.5.3</version>
						</dependency>
						<dependency>
							<groupId>xerces</groupId>
							<artifactId>xercesImpl</artifactId>
							<version>2.9.1</version>
						</dependency>
						<dependency>
							<groupId>net.sourceforge.saxon</groupId>
							<artifactId>saxon</artifactId>
							<version>9.1.0.8</version>
						</dependency>
						<dependency>
							<groupId>javax.mail</groupId>
							<artifactId>mail</artifactId>
							<version>1.4</version>
						</dependency>
					</dependencies>
					<executions>
						<execution>
							<id>my-antrun-initialize</id>
							<phase>initialize</phase>
							<configuration>
								<target>
									<property environment="env"/>
									<!-- read in all environment vars, now avail as env.* -->

									<!-- For JCBG-2099, disabling echoproperties b/c it shows passwords
							  <echo>========= Now echoing properties as they exist at start of the antrun-initialize ===</echo>
							  <echoproperties/>
							  echoing out the pom version
							  -->
									<echo>Writing pom version to a file pom.version.txt:
										${project.version}.</echo>
									<echo file="pom.version.properties"
										>project.version=${project.version}</echo>


									<dirname property="doctools-zip"
										file="${motive.docmodules:doctools:zip}"/>
									<echo> doctools-zip = ${motive.docmodules:doctools:zip}</echo>
									<dirname property="glossary-zip"
										file="${motive.docmodules:glossary:zip:resources}"/>
									<dirname property="libdoctools-zip"
										file="${motive.docmodules:libdoctools:zip}"/>
									<unzip src="${doctools-zip}/doctools-${doctools.version}.zip"
										dest="${project.build.directory}/doctools" overwrite="false"/>
									<unzip
										src="${glossary-zip}/glossary-${commoncontent.version}-resources.zip"
										dest="${project.build.directory}/doctools" overwrite="false"/>



									<!-- JCBG-2111 -->
									
									<echo>libdoctools-zip=${libdoctools-zip}, and
										motive.docmodules:libdoctools:zip =
										${motive.docmodules:libdoctools:zip} and
										motive.docmodules:doctools:zip=${motive.docmodules:doctools:zip}</echo>
									<unzip
										src="${libdoctools-zip}/libdoctools-${libdoctools.version}.zip"
										dest="${project.build.directory}/doctools" overwrite="false"/>

									<!-- put jsch jar in place for use with scp task later -->
									<copy verbose="true" todir="${user.home}/.ant/lib/" 
										file="${project.build.directory}/doctools/lib/jsch-0.1.50.jar"/> 

									<ant antfile="target/doctools/DocShared/main-build.xml"
										output="target/ant-module2build.log">
										<property name="module.filename" value="${module.filename}"/>
										<!-- for JCBG-1954, passing this down -->
										<property name="jira.uname">${jira.uname}</property>
										<property name="jira.password">${jira.password}</property>

										<target name="module2build"/>
										<target name="generate-olink-target-dbs"/>
									</ant>
								</target>
							</configuration>
							<goals>
								<goal>run</goal>
							</goals>
						</execution>
						<execution>
							<id>compile</id>
							<phase>compile</phase>
							<configuration>
								<target>
									<ant antfile="target/work/build.xml"
										output="target/ant-build.log"/>
								</target>
							</configuration>
							<goals>
								<goal>run</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>2.2-beta-1</version>
					<executions>
						<execution>
							<id>make resources</id>
							<goals>
								<goal>single</goal>
							</goals>
							<phase>package</phase>
							<configuration>
								<descriptors>
									<descriptor>${project.basedir}/assembly.xml</descriptor>
								</descriptors>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<!-- 
		this is required to make interactive build promotion work
		-->
					<groupId>org.jfrog.buildinfo</groupId>
					<artifactId>artifactory-maven-plugin</artifactId>
					<version>2.6.1</version>
					<!--<inherited>false</inherited>-->
					<executions>
						<execution>
							<id>build-info</id>
							<goals>
								<goal>publish</goal>
							</goals>
							<phase>validate</phase>

							<configuration>
								<deployProperties> </deployProperties>
								<artifactory>g
									<includeEnvVars>true</includeEnvVars>
									<timeoutSec>60</timeoutSec>
									<propertiesFile>publish.properties</propertiesFile>
								</artifactory>
								<publisher>
									<contextUrl>https://repo.lab.pl.alcatel-lucent.com</contextUrl>
									<username>${artifactory.username}</username>
									<password>${artifactory.password}</password>
									<repoKey>techpubs-mvn-candidates</repoKey>
									<snapshotRepoKey>techpubs-mvn-snapshots</snapshotRepoKey>
								</publisher>
							</configuration>
						</execution>
					</executions>
				</plugin>

			</plugins>

		</pluginManagement>

		<plugins>
			<plugin>
	            <groupId>org.jfrog.buildinfo</groupId>
	            <artifactId>artifactory-maven-plugin</artifactId>
	        </plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
			</plugin>
			
			<plugin>
				<groupId>org.asciidoctor</groupId>
				<artifactId>asciidoctor-maven-plugin</artifactId>
				<version>1.5.6</version>
				<dependencies>
					<dependency>
						<groupId>org.asciidoctor</groupId>
						<artifactId>asciidoctorj-pdf</artifactId>
						<version>1.5.0-alpha.11</version>
					</dependency>
					<dependency>
						<groupId>org.jruby</groupId>
						<artifactId>jruby-complete</artifactId>
						<version>1.7.21</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<id>asciidoc-to-pdf</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>process-asciidoc</goal>
						</goals>
						<configuration>
							<backend>pdf</backend>
							<outputDirectory>${project.build.directory}/out/en_US/external/pdf</outputDirectory>
							<!-- COMMENT:  specify location to place pdf file -->
							
						</configuration>
					</execution>
				</executions>
			</plugin>	
<!-- SPEED UP -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.2-beta-1</version>
				<executions>
					<execution>
						<id>make resources</id>
						<goals>
							<goal>single</goal>
						</goals>
						<phase>package</phase>
						<configuration>
							<descriptors>
								<descriptor>${project.basedir}/assembly.xml</descriptor>
							</descriptors>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	

</project>
