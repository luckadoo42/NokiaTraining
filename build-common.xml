<project name="build-common">
  
  <!-- Properties to apply to all books. To OVERRIDE any of these values for one or more specific books, just set a different value 
    in the book's build.xml file, BEFORE the line that imports build-common.xml -->
 
<!--    
  <property name="fail.on.bad.olink" value="no"/>
  <property name="skip.olink.conversion" value="no"/>
 -->
  <!--Below property is added to test FOP on bamboo, per Aaron. 13th Jul 2015 - set to false due to scissors font issue in pdf. -->
  <!-- 2nd Feb 2018: Below property was set to true to replace xep with FOP, per Aaron. -->
  <property name="fop.enable" value="false"/>  <!-- 16 Feb, turned it to true. 15 Feb 2018: this property is again set to false to fix stackoverflow error, per Aaron. -->
  <property name="branding" value="nokia1"/>
  <property name="infocenter" value="impact"/>
  <property name="google.code" value="3"/>
  <property name="parent-module-file" value="../../module.xml"/>
  <property name="support_holmanization" value="false"/>
  <property name="RELEASE" value="20"/>
  <property name="eclipse.plugin.id" value="impact.${current.docid}_${RELEASE}"/>
  <property name="COPYRIGHTYEAR" value="2020"/>
  <property name="COPYRIGHTMONTH" value="September"/>
  <property name="ProductName" value="Nokia Co-op training material"/>
  <property name="ProductAcronym" value="NCTM"/>
	  
  <!-- To generate doc feedback links which launch a JIRA form rather than an email, set the following properties in each book that is to use it (or in build-common.xml):-->
  <property name='feedback.type' value='jira'/> <!--(takes jira or email)-->
  <!-- these props only apply if feedback.type = jira -->

 <!-- for each property above that you want to use as a VARIABLE in the doc set, you must include a line below that replaces @@VARIABLE@@ with the value of ${VARIABLE}. -->
  
  <target name="local_preprocess" depends="preprocess">

    <echo>My current eclipse.plugin.id property is ${eclipse.plugin.id}. </echo>


    <echo>Replacing strings in intermediary file</echo>
  
    <echo>About to replace strings in ${staging.doc.dir}/${local_preprocess_input_base}${input_file_name}.xml. </echo>

    <replace file="${staging.doc.dir}/${local_preprocess_input_base}${input_file_name}.xml"
      encoding="UTF-8" summary="true">
      <replacefilter token="@@RELEASE@@" value="${RELEASE}"/>
      <replacefilter token="@@COPYRIGHTYEAR@@" value="${COPYRIGHTYEAR}"/>
      <replacefilter token="@@COPYRIGHTMONTH@@" value="${COPYRIGHTMONTH}"/>
      <replacefilter token="@@ProductName@@" value="${ProductName}"/>
      <replacefilter token="@@ProductAcronym@@" value="${ProductAcronym}"/>
      <replacefilter token="@@ProductNameShort@@" value="${ProductNameShort}"/>
      <replacefilter token="@@CSGshort@@" value="${CSGshort}"/>
      <replacefilter token="@@CSGlong@@" value="${CSGlong}"/>
      <replacefilter token="@@CSGAcronym@@" value="${CSGAcronym}"/>
      <replacefilter token="@@Console@@" value="${Console}"/>
      <replacefilter token="@@SES@@" value="${SES}"/>
      <replacefilter token="@@AES@@" value="${AES}"/>
      <replacefilter token="@@TS43@@" value="${TS43}"/>
      <replacefilter token="@@ProductID@@" value="${ProductID}"/>
      <replacefilter token="@@RNbiblioid@@" value="${RNbiblioid}"/>
      <replacefilter token="@@biblioID@@" value="${biblioID}"/>
	  <replacefilter token="@@JASPER_FILENAME@@" value="${JASPER_FILENAME}"/>
	  <replacefilter token="@@JASPER_VERSION@@" value="${JASPER_VERSION}"/>
        
      <replacefilter token="@@SolutionName@@" value="${SolutionName}"/>       
      <replacefilter token="@@PortfolioName@@" value="${PortfolioName}"/> 
      <replacefilter token="@@SMlong@@" value="${SMlong}"/>
      <replacefilter token="@@SMshort@@" value="${SMshort}"/>
      <replacefilter token="@@DDAlong@@" value="${DDAlong}"/>
      <replacefilter token="@@DDAshort@@" value="${DDAshort}"/>
      <replacefilter token="@@DClong@@" value="${DClong}"/>
      <replacefilter token="@@DCshort@@" value="${DCshort}"/>
      <replacefilter token="@@CMDlong@@" value="${CMDlong}"/>
      <replacefilter token="@@CMDshort@@" value="${CMDshort}"/>
      <replacefilter token="@@CSF_KEYCLOAK@@" value="${CSF_KEYCLOAK}"/>
      <replacefilter token="@@CSF_CMDB@@" value="${CSF_CMDB}"/> 
      <replacefilter token="@@CSF_CSTO@@" value="${CSF_CSTO}"/>
    </replace>
 
    <!-- Now that we have done the replaces, we need to output the local_preprocess_output_base file...  -->

   <copy
            file="${staging.doc.dir}/${local_preprocess_input_base}${input_file_name}.xml"
            tofile="${staging.doc.dir}/${local_preprocess_output_base}${input_file_name}.xml"/>

   



  </target>
</project>
