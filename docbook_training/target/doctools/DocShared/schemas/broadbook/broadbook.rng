<?xml version="1.0" encoding="UTF-8"?>
<grammar xmlns="http://relaxng.org/ns/structure/1.0" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:svg="http://www.w3.org/2000/svg" xmlns:s="http://www.ascc.net/xml/schematron" xmlns:rng="http://relaxng.org/ns/structure/1.0" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:db="http://docbook.org/ns/docbook" xmlns:ctrl="http://nwalsh.com/xmlns/schema-control/" xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes" ns="http://docbook.org/ns/docbook">

	<include href="docbookxi.rng">

		<define name="db.title.attlist">
			<interleave>
				<optional>
					<ref name="db.title.role.attribute"/>
				</optional>
				<interleave>
					<ref name="db.common.base.attributes"/>
					<optional>
						<ref name="db.annotations.attribute"/>
					</optional>
				</interleave>
				<ref name="db.common.linking.attributes"/>
			</interleave>
		</define>

		<define name="db.security.attribute">
			<attribute name="security">
				<a:documentation>Security level of this element.</a:documentation>
				<choice>
					<value>internal</value>
					<a:documentation>This element contains internal-only content.</a:documentation>
					<value>reviewer</value>
					<a:documentation>This element contains reviewer-content.</a:documentation>
					<value>external</value>
					<a:documentation>This element contains external content and will be published in all version of the docuemnt.</a:documentation>
					<value>writeronly</value>
					<a:documentation>This element contains writeronly content and will not be published in external, internal, or reviewer versions of the document.</a:documentation>
					<value>unconscious</value>
				</choice>
			</attribute>
		</define>

		<define name="db.condition.attribute">
			<attribute name="condition">
				<a:documentation>Security level of this element.</a:documentation>
				<choice>
					<value>print</value>
					<a:documentation>This element should only appear in print/pdf output.</a:documentation>
					<value>online</value>
					<a:documentation>This element should only appear in online/html output.</a:documentation>
				</choice>
			</attribute>
		</define>

		<define name="db.table.choice">
			<choice>
				<notAllowed/>
				<ref name="db.cals.table"/>
				<!--ref name="db.html.table"/-->
			</choice>
		</define>

		<define name="db.sect1">
			<notAllowed/>
		</define>

		<define name="db.refsect1">
			<notAllowed/>
		</define>

		<define name="db.equation">
			<notAllowed/>
		</define>

		<define name="db.inlineequation">
			<notAllowed/>
		</define>

		<define name="db.toc">
			<notAllowed/>
		</define>

		<define name="db.glossterm.attlist">
			<interleave>
				<optional>
					<ref name="db.glossterm.role.attribute"/>
				</optional>
				<ref name="db.common.attributes"/>
				<optional>
					<choice>
						<attribute name="linkend">
							<a:documentation>Points to an internal link target by identifying the value of its xml:id attribute</a:documentation>
							<text/>
						</attribute>
						<ref name="db.href.attributes"/>
					</choice>
				</optional>
				<ref name="db.baseform.attribute"/>
			</interleave>
		</define>
		
		<define name="db.glossseealso.otherterm.attribute">
			<attribute name="otherterm">
				<a:documentation>Identifies the other term</a:documentation>
				<text/>
			</attribute>
		</define>

		<define name="db.formalpara">
			<element name="formalpara">
				<a:documentation>A paragraph with a title</a:documentation>
				<ref name="db.formalpara.attlist"/>
				<ref name="db.formalpara.info"/>
				<zeroOrMore>
					<ref name="db.indexing.inlines"/>
				</zeroOrMore>
				<oneOrMore>
					<ref name="db.para"/>
				</oneOrMore>
			</element>
		</define>


		<define name="db.effectivity.attributes">
			<interleave>
				<optional>
					<ref name="db.arch.attribute"/>
				</optional>
				<optional>
					<ref name="db.audience.attribute"/>
				</optional>
				<optional>
					<ref name="db.condition.attribute"/>
				</optional>
				<optional>
					<ref name="db.conformance.attribute"/>
				</optional>
				<optional>
					<ref name="db.os.attribute"/>
				</optional>
				<optional>
					<ref name="db.revision.attribute"/>
				</optional>
				<optional>
					<ref name="db.security.attribute"/>
				</optional>
				<optional>
					<ref name="db.userlevel.attribute"/>
				</optional>
				<optional>
					<ref name="db.vendor.attribute"/>
				</optional>
				<optional>
					<ref name="db.wordsize.attribute"/>
				</optional>
				<optional>
					<attribute name="localize">
						<a:documentation>Should this element be localized? Yes, no, or maybe</a:documentation>
						<choice>
							<value>yes</value>
							<a:documentation>This element should be translated.</a:documentation>
							<value>no</value>
							<a:documentation>This element should not be translated.</a:documentation>
						</choice>
					</attribute>
				</optional>
				<optional>
					<attribute name="author_condition_1">
						<a:documentation>An attribute available for arbitrary conditioning. </a:documentation>
					</attribute>
				</optional>
				<optional>
					<attribute name="author_condition_2">
						<a:documentation>An attribute available for arbitrary conditioning. </a:documentation>
					</attribute>
				</optional>
			</interleave>
		</define>

		<define name="db.xrefstyle.attribute">
			<attribute name="xrefstyle">
				<a:documentation>Specifies a keyword or keywords identifying additional style information</a:documentation>
				<choice>
					<value type="token">select: nopage</value>
					<value type="token">select: label nopage</value>
					<value type="token">select: label</value>
					<value type="token">select: linktext</value>
					<text/>
				</choice>
			</attribute>
		</define>

	</include>



	<start combine="choice">
		<choice>
			<ref name="db.phrase"/>
			<ref name="db.note"/>
			<ref name="db.tip"/>
			<ref name="db.important"/>
			<ref name="db.warning"/>
			<ref name="db.caution"/>
			<ref name="db.table"/>
			<ref name="db.informaltable"/>
			<ref name="db.procedure"/>
			<ref name="db.step"/>
			<ref name="db.substeps"/>
			<ref name="db.formalpara"/>
			<ref name="db.para"/>
			<ref name="db.simpara"/>
			<ref name="db.itemizedlist"/>
			<ref name="db.orderedlist"/>
			<ref name="db.simplelist"/>
			<ref name="db.listitem"/>
			<ref name="db.member"/>
			<ref name="db.variablelist"/>
			<ref name="db.varlistentry"/>
			<ref name="db.example"/>
			<ref name="db.informalexample"/>
			<ref name="db.screenshot"/>
			<ref name="db.figure"/>
			<ref name="db.informalfigure"/>
			<ref name="db.inlinemediaobject"/>
			<ref name="db.row"/>
			<ref name="db.qandaentry"/>
			<ref name="db.programlisting"/>
			<ref name="db.computeroutput"/>
			<ref name="db.glossentry"/>
			<ref name="db.legalnotice"/>
		</choice>
	</start>

	<define name="db._text" combine="choice">
		<zeroOrMore>
			<choice>
				<ref name="db.xi.include"/>
			</choice>
		</zeroOrMore>
	</define>

	<define name="db.share.attlist">
		<attribute name="sharer_id">
			<text/>
		</attribute>
		<attribute name="sharer_doc">
			<text/>
		</attribute>
	</define>
	<define name="db.procedure" combine="choice">
		<element name="share_procedure">
			<a:documentation>A procedure pulled in from another location. Use sharer_doc to define the document from which it is taken and sharer_id for the id of the target element.</a:documentation>
			<ref name="db.procedure.attlist"/>
			<ref name="db.share.attlist"/>
			<empty/>
		</element>
	</define>
	<define name="db.procedure.attlist" combine="interleave">
		<interleave>
			<optional>
				<attribute name="is_shared">
					<text/>
				</attribute>
			</optional>
		</interleave>
	</define>
	<define name="db.step" combine="choice">
		<choice>
			<element name="share_step">
				<a:documentation>A step pulled in from another location. Use sharer_doc to define the document from which it is taken and sharer_id for the id of the target element.</a:documentation>
				<ref name="db.step.attlist"/>
				<ref name="db.share.attlist"/>
				<empty/>
			</element>
			<ref name="db.xi.include"/>
		</choice>
	</define>
	<define name="db.step.attlist" combine="interleave">
		<interleave>
			<optional>
				<attribute name="is_shared">
					<text/>
				</attribute>
			</optional>
		</interleave>
	</define>
	<define name="db.substeps" combine="choice">
		<element name="share_substeps">
			<a:documentation>A substeps pulled in from another location. Use sharer_doc to define the document from which it is taken and sharer_id for the id of the target element.</a:documentation>
			<ref name="db.substeps.attlist"/>
			<ref name="db.share.attlist"/>
			<empty/>
		</element>
	</define>
	<define name="db.substeps.attlist" combine="interleave">
		<interleave>
			<optional>
				<attribute name="is_shared">
					<text/>
				</attribute>
			</optional>
		</interleave>
	</define>
	<define name="db.formalpara" combine="choice">
		<element name="share_formalpara">
			<a:documentation>A formalpara pulled in from another location. Use sharer_doc to define the document from which it is taken and sharer_id for the id of the target element.</a:documentation>
			<ref name="db.formalpara.attlist"/>
			<ref name="db.share.attlist"/>
			<empty/>
		</element>
	</define>
	<define name="db.formalpara.attlist" combine="interleave">
		<interleave>
			<optional>
				<attribute name="is_shared">
					<text/>
				</attribute>
			</optional>
		</interleave>
	</define>
	<define name="db.para" combine="choice">
		<element name="share_para">
			<a:documentation>A para pulled in from another location. Use sharer_doc to define the document from which it is taken and sharer_id for the id of the target element.</a:documentation>
			<s:pattern name="Root must have version">
				<s:rule context="/db:para">
					<s:assert test="@version">The root element must have a version attribute.</s:assert>
				</s:rule>
			</s:pattern>
			<ref name="db.para.attlist"/>
			<ref name="db.share.attlist"/>
			<empty/>
		</element>
	</define>
	<define name="db.para.attlist" combine="interleave">
		<interleave>
			<optional>
				<attribute name="is_shared">
					<text/>
				</attribute>
			</optional>
		</interleave>
	</define>
	<define name="db.simpara" combine="choice">
		<element name="share_simpara">
			<a:documentation>A simpara pulled in from another location. Use sharer_doc to define the document from which it is taken and sharer_id for the id of the target element.</a:documentation>
			<ref name="db.simpara.attlist"/>
			<ref name="db.share.attlist"/>
			<empty/>
		</element>
	</define>
	<define name="db.simpara.attlist" combine="interleave">
		<interleave>
			<optional>
				<attribute name="is_shared">
					<text/>
				</attribute>
			</optional>
		</interleave>
	</define>
	<define name="db.itemizedlist" combine="choice">
		<element name="share_itemizedlist">
			<a:documentation>An itemizedlist pulled in from another location. Use sharer_doc to define the document from which it is taken and sharer_id for the id of the target element.</a:documentation>
			<ref name="db.itemizedlist.attlist"/>
			<ref name="db.share.attlist"/>
			<empty/>
		</element>
	</define>
	<define name="db.itemizedlist.attlist" combine="interleave">
		<interleave>
			<optional>
				<attribute name="is_shared">
					<text/>
				</attribute>
			</optional>
		</interleave>
	</define>
	<define name="db.orderedlist" combine="choice">
		<element name="share_orderedlist">
			<a:documentation>An orderedlist pulled in from another location. Use sharer_doc to define the document from which it is taken and sharer_id for the id of the target element.</a:documentation>
			<ref name="db.orderedlist.attlist"/>
			<ref name="db.share.attlist"/>
			<empty/>
		</element>
	</define>
	<define name="db.orderedlist.attlist" combine="interleave">
		<interleave>
			<optional>
				<attribute name="is_shared">
					<text/>
				</attribute>
			</optional>
		</interleave>
	</define>
	<define name="db.listitem" combine="choice">
		<element name="share_listitem">
			<a:documentation>A listitem pulled in from another location. Use sharer_doc to define the document from which it is taken and sharer_id for the id of the target element.</a:documentation>
			<ref name="db.listitem.attlist"/>
			<ref name="db.share.attlist"/>
			<empty/>
		</element>
	</define>
	<define name="db.listitem.attlist" combine="interleave">
		<interleave>
			<optional>
				<attribute name="is_shared">
					<text/>
				</attribute>
			</optional>
		</interleave>
	</define>
	<define name="db.member" combine="choice">
		<element name="share_member">
			<a:documentation>A member pulled in from another location. Use sharer_doc to define the document from which it is taken and sharer_id for the id of the target element.</a:documentation>
			<ref name="db.member.attlist"/>
			<ref name="db.share.attlist"/>
			<empty/>
		</element>
	</define>
	<define name="db.member.attlist" combine="interleave">
		<interleave>
			<optional>
				<attribute name="is_shared">
					<text/>
				</attribute>
			</optional>
		</interleave>
	</define>
	<define name="db.variablelist" combine="choice">
		<element name="share_variablelist">
			<a:documentation>A variablelist pulled in from another location. Use sharer_doc to define the document from which it is taken and sharer_id for the id of the target element.</a:documentation>
			<ref name="db.variablelist.attlist"/>
			<ref name="db.share.attlist"/>
			<empty/>
		</element>
	</define>
	<define name="db.variablelist.attlist" combine="interleave">
		<interleave>
			<optional>
				<attribute name="is_shared">
					<text/>
				</attribute>
			</optional>
		</interleave>
	</define>
	<define name="db.varlistentry" combine="choice">
		<element name="share_varlistentry">
			<a:documentation>A varlistentry pulled in from another location. Use sharer_doc to define the document from which it is taken and sharer_id for the id of the target element.</a:documentation>
			<ref name="db.varlistentry.attlist"/>
			<ref name="db.share.attlist"/>
			<empty/>
		</element>
	</define>
	<define name="db.varlistentry.attlist" combine="interleave">
		<interleave>
			<optional>
				<attribute name="is_shared">
					<text/>
				</attribute>
			</optional>
		</interleave>
	</define>
	<define name="db.example" combine="choice">
		<element name="share_example">
			<a:documentation>An example pulled in from another location. Use sharer_doc to define the document from which it is taken and sharer_id for the id of the target element.</a:documentation>
			<ref name="db.example.attlist"/>
			<ref name="db.share.attlist"/>
			<empty/>
		</element>
	</define>
	<define name="db.example.attlist" combine="interleave">
		<interleave>
			<optional>
				<attribute name="is_shared">
					<text/>
				</attribute>
			</optional>
		</interleave>
	</define>
	<define name="db.informalexample" combine="choice">
		<element name="share_informalexample">
			<a:documentation>An informalexample pulled in from another location. Use sharer_doc to define the document from which it is taken and sharer_id for the id of the target element.</a:documentation>
			<ref name="db.informalexample.attlist"/>
			<ref name="db.share.attlist"/>
			<empty/>
		</element>
	</define>
	<define name="db.informalexample.attlist" combine="interleave">
		<interleave>
			<optional>
				<attribute name="is_shared">
					<text/>
				</attribute>
			</optional>
		</interleave>
	</define>
	<define name="db.screenshot" combine="choice">
		<element name="share_screenshot">
			<a:documentation>A screenshot pulled in from another location. Use sharer_doc to define the document from which it is taken and sharer_id for the id of the target element.</a:documentation>
			<ref name="db.screenshot.attlist"/>
			<ref name="db.share.attlist"/>
			<empty/>
		</element>
	</define>
	<define name="db.screenshot.attlist" combine="interleave">
		<interleave>
			<optional>
				<attribute name="is_shared">
					<text/>
				</attribute>
			</optional>
		</interleave>
	</define>
	<define name="db.figure" combine="choice">
		<element name="share_figure">
			<a:documentation>A figure pulled in from another location. Use sharer_doc to define the document from which it is taken and sharer_id for the id of the target element.</a:documentation>
			<ref name="db.figure.attlist"/>
			<ref name="db.share.attlist"/>
			<empty/>
		</element>
	</define>
	<define name="db.figure.attlist" combine="interleave">
		<interleave>
			<optional>
				<attribute name="is_shared">
					<text/>
				</attribute>
			</optional>
		</interleave>
	</define>
	<define name="db.informalfigure" combine="choice">
		<element name="share_informalfigure">
			<a:documentation>A informalfigure pulled in from another location. Use sharer_doc to define the document from which it is taken and sharer_id for the id of the target element.</a:documentation>
			<ref name="db.informalfigure.attlist"/>
			<ref name="db.share.attlist"/>
			<empty/>
		</element>
	</define>
	<define name="db.informalfigure.attlist" combine="interleave">
		<interleave>
			<optional>
				<attribute name="is_shared">
					<text/>
				</attribute>
			</optional>
		</interleave>
	</define>
	<define name="db.inlinemediaobject" combine="choice">
		<element name="share_inlinemediaobject">
			<a:documentation>An inlinemediaobject pulled in from another location. Use sharer_doc to define the document from which it is taken and sharer_id for the id of the target element.</a:documentation>
			<ref name="db.inlinemediaobject.attlist"/>
			<ref name="db.share.attlist"/>
			<empty/>
		</element>
	</define>
	<define name="db.inlinemediaobject.attlist" combine="interleave">
		<interleave>
			<optional>
				<attribute name="is_shared">
					<text/>
				</attribute>
			</optional>
		</interleave>
	</define>
	<define name="db.phrase" combine="choice">
		<element name="share_phrase">
			<a:documentation>A phrase pulled in from another location. Use sharer_doc to define the document from which it is taken and sharer_id for the id of the target element.</a:documentation>
			<ref name="db.phrase.attlist"/>
			<ref name="db.share.attlist"/>
			<empty/>
		</element>
	</define>
	<define name="db.phrase.attlist" combine="interleave">
		<interleave>
			<optional>
				<attribute name="is_shared">
					<text/>
				</attribute>
			</optional>
		</interleave>
	</define>
	<define name="db.appendix" combine="choice">
		<element name="share_appendix">
			<a:documentation>An appendix pulled in from another location. Use sharer_doc to define the document from which it is taken and sharer_id for the id of the target element.</a:documentation>
			<s:pattern name="Root must have version">
				<s:rule context="/db:appendix">
					<s:assert test="@version">The root element must have a version attribute.</s:assert>
				</s:rule>
			</s:pattern>
			<ref name="db.appendix.attlist"/>
			<ref name="db.share.attlist"/>
			<empty/>
		</element>
	</define>
	<define name="db.appendix.attlist" combine="interleave">
		<interleave>
			<optional>
				<attribute name="is_shared">
					<text/>
				</attribute>
			</optional>
		</interleave>
	</define>
	<define name="db.chapter" combine="choice">
		<element name="share_chapter">
			<a:documentation>A chapter pulled in from another location. Use sharer_doc to define the document from which it is taken and sharer_id for the id of the target element.</a:documentation>
			<s:pattern name="Root must have version">
				<s:rule context="/db:chapter">
					<s:assert test="@version">The root element must have a version attribute.</s:assert>
				</s:rule>
			</s:pattern>
			<ref name="db.chapter.attlist"/>
			<ref name="db.share.attlist"/>
			<empty/>
		</element>
	</define>
	<define name="db.chapter.attlist" combine="interleave">
		<interleave>
			<optional>
				<attribute name="is_shared">
					<text/>
				</attribute>
			</optional>
		</interleave>
	</define>
	<define name="db.part" combine="choice">
		<element name="share_part">
			<a:documentation>A part pulled in from another location. Use sharer_doc to define the document from which it is taken and sharer_id for the id of the target element.</a:documentation>
			<s:pattern name="Root must have version">
				<s:rule context="/db:part">
					<s:assert test="@version">The root element must have a version attribute.</s:assert>
				</s:rule>
			</s:pattern>
			<ref name="db.part.attlist"/>
			<ref name="db.share.attlist"/>
			<empty/>
		</element>
	</define>
	<define name="db.part.attlist" combine="interleave">
		<interleave>
			<optional>
				<attribute name="is_shared">
					<text/>
				</attribute>
			</optional>
		</interleave>
	</define>
	<define name="db.preface" combine="choice">
		<element name="share_preface">
			<a:documentation>A preface pulled in from another location. Use sharer_doc to define the document from which it is taken and sharer_id for the id of the target element.</a:documentation>
			<s:pattern name="Root must have version">
				<s:rule context="/db:preface">
					<s:assert test="@version">The root element must have a version attribute.</s:assert>
				</s:rule>
			</s:pattern>
			<ref name="db.preface.attlist"/>
			<ref name="db.share.attlist"/>
			<empty/>
		</element>
	</define>
	<define name="db.preface.attlist" combine="interleave">
		<interleave>
			<optional>
				<attribute name="is_shared">
					<text/>
				</attribute>
			</optional>
		</interleave>
	</define>
	<define name="db.section" combine="choice">
		<element name="share_section">
			<a:documentation>A section pulled in from another location. Use sharer_doc to define the document from which it is taken and sharer_id for the id of the target element.</a:documentation>
			<s:pattern name="Root must have version">
				<s:rule context="/db:section">
					<s:assert test="@version">The root element must have a version attribute.</s:assert>
				</s:rule>
			</s:pattern>
			<ref name="db.section.attlist"/>
			<ref name="db.share.attlist"/>
			<empty/>
		</element>
	</define>
	<define name="db.section.attlist" combine="interleave">
		<interleave>
			<optional>
				<attribute name="is_shared">
					<text/>
				</attribute>
			</optional>
		</interleave>
	</define>
	<define name="db.row" combine="choice">
		<element name="share_row">
			<a:documentation>A row pulled in from another location. Use sharer_doc to define the document from which it is taken and sharer_id for the id of the target element.</a:documentation>
			<ref name="db.row.attlist"/>
			<ref name="db.share.attlist"/>
			<empty/>
		</element>
	</define>
	<define name="db.row.attlist" combine="interleave">
		<interleave>
			<optional>
				<attribute name="is_shared">
					<text/>
				</attribute>
			</optional>
		</interleave>
	</define>
	<define name="db.cals.informaltable" combine="choice">
		<element name="share_informaltable">
			<a:documentation>An informaltable pulled in from another location. Use sharer_doc to define the document from which it is taken and sharer_id for the id of the target element.</a:documentation>
			<ref name="db.cals.informaltable.attlist"/>
			<ref name="db.share.attlist"/>
			<empty/>
		</element>
	</define>
	<define name="db.cals.informaltable.attlist" combine="interleave">
		<interleave>
			<optional>
				<attribute name="is_shared">
					<text/>
				</attribute>
			</optional>
		</interleave>
	</define>
	<define name="db.qandaentry" combine="choice">
		<element name="share_qandaentry">
			<a:documentation>A qandaentry pulled in from another location. Use sharer_doc to define the document from which it is taken and sharer_id for the id of the target element.</a:documentation>
			<ref name="db.qandaentry.attlist"/>
			<ref name="db.share.attlist"/>
			<empty/>
		</element>
	</define>
	<define name="db.qandaentry.attlist" combine="interleave">
		<interleave>
			<optional>
				<attribute name="is_shared">
					<text/>
				</attribute>
			</optional>
		</interleave>
	</define>
	<define name="db.programlisting" combine="choice">
		<element name="share_programlisting">
			<a:documentation>A programlisting pulled in from another location. Use sharer_doc to define the document from which it is taken and sharer_id for the id of the target element.</a:documentation>
			<ref name="db.programlisting.attlist"/>
			<ref name="db.share.attlist"/>
			<empty/>
		</element>
	</define>
	<define name="db.programlisting.attlist" combine="interleave">
		<interleave>
			<optional>
				<attribute name="is_shared">
					<text/>
				</attribute>
			</optional>
		</interleave>
	</define>
	<define name="db.caution" combine="choice">
		<element name="share_caution">
			<a:documentation>A caution pulled in from another location. Use sharer_doc to define the document from which it is taken and sharer_id for the id of the target element.</a:documentation>
			<ref name="db.caution.attlist"/>
			<ref name="db.share.attlist"/>
			<empty/>
		</element>
	</define>
	<define name="db.caution.attlist" combine="interleave">
		<interleave>
			<optional>
				<attribute name="is_shared">
					<text/>
				</attribute>
			</optional>
		</interleave>
	</define>
	<define name="db.important" combine="choice">
		<element name="share_important">
			<a:documentation>An important pulled in from another location. Use sharer_doc to define the document from which it is taken and sharer_id for the id of the target element.</a:documentation>
			<ref name="db.important.attlist"/>
			<ref name="db.share.attlist"/>
			<empty/>
		</element>
	</define>
	<define name="db.important.attlist" combine="interleave">
		<interleave>
			<optional>
				<attribute name="is_shared">
					<text/>
				</attribute>
			</optional>
		</interleave>
	</define>
	<define name="db.note" combine="choice">
		<element name="share_note">
			<a:documentation>A note pulled in from another location. Use sharer_doc to define the document from which it is taken and sharer_id for the id of the target element.</a:documentation>
			<ref name="db.note.attlist"/>
			<ref name="db.share.attlist"/>
			<empty/>
		</element>
	</define>
	<define name="db.note.attlist" combine="interleave">
		<interleave>
			<optional>
				<attribute name="is_shared">
					<text/>
				</attribute>
			</optional>
		</interleave>
	</define>
	<define name="db.tip" combine="choice">
		<element name="share_tip">
			<a:documentation>A tip pulled in from another location. Use sharer_doc to define the document from which it is taken and sharer_id for the id of the target element.</a:documentation>
			<ref name="db.tip.attlist"/>
			<ref name="db.share.attlist"/>
			<empty/>
		</element>
	</define>
	<define name="db.tip.attlist" combine="interleave">
		<interleave>
			<optional>
				<attribute name="is_shared">
					<text/>
				</attribute>
			</optional>
		</interleave>
	</define>
	<define name="db.warning" combine="choice">
		<element name="share_warning">
			<a:documentation>A wanring pulled in from another location. Use sharer_doc to define the document from which it is taken and sharer_id for the id of the target element.</a:documentation>
			<ref name="db.warning.attlist"/>
			<ref name="db.share.attlist"/>
			<empty/>
		</element>
	</define>
	<define name="db.warning.attlist" combine="interleave">
		<interleave>
			<optional>
				<attribute name="is_shared">
					<text/>
				</attribute>
			</optional>
		</interleave>
	</define>
	<define name="db.computeroutput" combine="choice">
		<element name="share_computeroutput">
			<a:documentation>A computeroutput pulled in from another location. Use sharer_doc to define the document from which it is taken and sharer_id for the id of the target element.</a:documentation>
			<ref xmlns="http://relaxng.org/ns/structure/1.0" name="db.computeroutput.attlist"/>
			<ref name="db.share.attlist"/>
			<empty/>
		</element>
	</define>
	<define name="db.computeroutput.attlist" combine="interleave">
		<interleave>
			<optional>
				<attribute name="is_shared">
					<text/>
				</attribute>
			</optional>
		</interleave>
	</define>
	<define name="db.simplelist" combine="choice">
		<element name="share_simplelist">
			<a:documentation>A simplelist pulled in from another location. Use sharer_doc to define the document from which it is taken and sharer_id for the id of the target element.</a:documentation>
			<ref xmlns="http://relaxng.org/ns/structure/1.0" name="db.simplelist.attlist"/>
			<ref name="db.share.attlist"/>
			<empty/>
		</element>
	</define>
	<define name="db.simplelist.attlist" combine="interleave">
		<interleave>
			<optional>
				<attribute name="is_shared">
					<text/>
				</attribute>
			</optional>
		</interleave>
	</define>
	<define name="db.cals.table" combine="choice">
		<element name="share_table">
			<a:documentation>A element pulled in from another location. Use sharer_doc to define the document from which it is taken and sharer_id for the id of the target element.</a:documentation>
			<ref name="db.cals.table.attlist"/>
			<ref name="db.share.attlist"/>
			<empty/>
		</element>
	</define>
	<define name="db.cals.table.attlist" combine="interleave">
		<interleave>
			<optional>
				<attribute name="is_shared">
					<text/>
				</attribute>
			</optional>
		</interleave>
	</define>

	<define name="db.glossentry.attlist" combine="interleave">
		<interleave>
			<optional>
				<attribute name="family">
					<text/>
				</attribute>
			</optional>
		</interleave>
	</define>


        <s:pattern name="The fileref attribute must not be null">
          <s:rule context="//db:imagedata">
            <s:assert test="not(normalize-space(@fileref) = '')">The fileref attribute on olink must not be empty.</s:assert>
          </s:rule>
        </s:pattern>
        <s:pattern name="The glossterm element must have a linkend attribute">
          <s:rule context="//db:glossterm[not(parent::db:glossentry)]">
            <s:assert test="@linkend and not(normalize-space(@linkend) = '')">The glossentry/glossterm element must have a linkend attribute.</s:assert>
          </s:rule>
        </s:pattern>
        <s:pattern name="The targetptr and targetdoc attributes must not be null">
          <s:rule context="//db:olink">
            <s:assert test="not(normalize-space(@targetptr) = '') and not(normalize-space(@targetdoc) = '')">The targetptr and targetdoc attributes on olink must not be empty.</s:assert>
          </s:rule>
        </s:pattern>
        <s:pattern name="The primary, secondary, and tertiary elements must not be null">
          <s:rule context="//db:primary|//db:secondary|//db:tertiary">
            <s:assert test="not(normalize-space(.) = '')">The primary, secondary, and tertiary elements must not be empty.</s:assert>
          </s:rule>
        </s:pattern>
        <s:pattern name="The remark element must not be empty">
          <s:rule context="//db:remark">
            <s:assert test="not(normalize-space(.) = '')">The remark element must not be empty.</s:assert>
          </s:rule>
        </s:pattern>
        <s:pattern name="The filename element must not be empty">
          <s:rule context="//db:filename">
            <s:assert test="not(normalize-space(.) = '')">The filename element must not be empty.</s:assert>
          </s:rule>
        </s:pattern>
        <s:pattern name="The code element must not be empty">
          <s:rule context="//db:code">
            <s:assert test="not(normalize-space(.) = '')">The code element must not be empty.</s:assert>
          </s:rule>
        </s:pattern>
        <s:pattern name="The title element is required and must not be null">
          <s:rule context="//db:title">
            <s:assert test="not(normalize-space(.) = '') and not(@security = 'writeronly') and not(@security = 'reviewer') and not(@security = 'internal') and not(@revisionflag = 'deleted') and not(@condition)">The title element must not be empty or conditioned out.</s:assert>
          </s:rule>
        </s:pattern>
        <s:pattern name="If the language is English or not set, then the procedure element must have a title that begins with 'To'">
          <s:rule context="//db:procedure[not(ancestor-or-self::*[@xml:lang]) or starts-with(ancestor-or-self::*[@xml:lang][1]/@xml:lang,'en')] ">
            <s:assert test="./db:title[starts-with(normalize-space(.),'To ')]|./db:info/db:title[starts-with(normalize-space(.),'To ')]">The procedure element must have a title that begins with 'To'.</s:assert>
          </s:rule>
        </s:pattern>
        <s:pattern name="The security attribute should be put on the ancestor listitem">
          <s:rule context="//db:listitem[not(ancestor-or-self::*[@security='reviewer']) and not(ancestor-or-self::*[@security='writeronly'])]/*">
            <s:assert test="../*[not(@security) or @security = 'external'] or (not(@security = 'reviewer') and not(@security = 'internal') and not(@security = 'writeronly'))">The security attribute should be put on the ancestor listitem.</s:assert>
          </s:rule>
        </s:pattern>
        <s:pattern name="The security attribute should be put on the ancestor step">
          <s:rule context="//db:step[not(ancestor-or-self::*[@security='reviewer']) and not(ancestor-or-self::*[@security='writeronly'])]/*">
            <s:assert test="../*[not(@security) or @security = 'external'] or (not(@security = 'reviewer') and not(@security = 'internal') and not(@security = 'writeronly'))">The security attribute should be put on the ancestor step.</s:assert>
          </s:rule>
        </s:pattern>
        <s:pattern name="revisionflag=deleted attribute should be put on the ancestor listitem">
          <s:rule context="//db:listitem[not(ancestor-or-self::*[@revisionflag='deleted'])]/*|//db:step[not(ancestor-or-self::*[@revisionflag='deleted'])]/*">
            <s:assert test="../*[not(@revisionflag) or @revisionflag != 'deleted'] or (not(@revisionflag = 'deleted'))">The revisionflag=deleted attribute should be put on the ancestor listitem or step.</s:assert>
          </s:rule>
        </s:pattern>
	<s:pattern name="No roles on indexterms">
	  <s:rule context="db:indexterm">
	    <s:assert test="not(@role)">The indexterm element must not have a role attribute</s:assert>
	  </s:rule>
	</s:pattern>

	<!-- For JCBG-1291. Compare downcased xml:id to downcased xml:id, in preceding access only. This causes the error to show up on the 2nd id, the one that matches a preceding ID if both are downcased -->
	<!-- For JCBG-1744, added predicate [not(db:glossterm)] so that this does not trigger for glossterms -->
	<s:pattern name="IDs that differ only in case are not allowed">
		<s:rule context="*[not(db:glossterm)][@xml:id]">
			<s:assert test="not(preceding::*[translate(@xml:id, 'ABCDEFGHIJKLMNOPQRSTUVWXYZ','abcdefghijklmnopqrstuvwxyz') = translate(current()/@xml:id, 'ABCDEFGHIJKLMNOPQRSTUVWXYZ','abcdefghijklmnopqrstuvwxyz')])">IDs that differ only in case are not allowed</s:assert>
		</s:rule>
	</s:pattern> 
	
	<!-- For JCBG-466, warn when a glossseealso lacks an otherterm or has a linkend -->
	<s:pattern name="glossseealso must have @otherterm">
		<s:rule context="db:glossseealso|db:glosssee">
			<s:assert test="@otherterm">A glosssee or glossseealso element must have an otherterm attribute (containing the target ID of another term to point to).</s:assert>
		</s:rule>
	</s:pattern> 
	
	<s:pattern name="glossseealso must not have @linkend">
		<s:rule context="db:glossseealso|db:glosssee">
			<s:assert test="not(@linkend)">A glosssee or glossseealso element must not have a linkend attribute; use @otherterm instead.</s:assert>
		</s:rule>
	</s:pattern> 

	<!-- For JCBG-1303, warn when a glossentry lacks an xml:id -->
	<s:pattern name="glossentry must have @xml:id">
		<s:rule context="db:glossentry">
			<s:assert test="@xml:id">A glossentry element must have an xml:id.</s:assert>
		</s:rule>
	</s:pattern>
	
	<!-- FOR JCBG-188, warn when a procedure is inside a para -->
	<s:pattern name="procedure must not be inside a para">
		<s:rule context="db:para">
			<s:assert test="not(db:procedure)">A procedure should not be put inside a para; if you do that, it doesn't show up on the TOC in HTML outputs; see JCBG-188. </s:assert>
		</s:rule>
	</s:pattern>

	<!-- FOR JCBG-2038, warn when empty href  -->
	<s:pattern name="href must not be empty">
		<s:rule context="*">
			<s:assert test="not(@xlink:href = '')">An xlink:href attribute should not be empty.</s:assert>
		</s:rule>
	</s:pattern>


</grammar>
